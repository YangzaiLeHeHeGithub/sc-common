spring:
  redis:
    host: 10.200.16.101 #本地redis
    port: 6379
    #password:
    database: 6
    timeout:  5000
    jedis:
      pool:
        # 最大空闲连接
        max-idle: 50
        # 最小空闲链接
        min-idle: 3
        # 最大连接数（负数表示没有限制）
        max-active: 100
        # 最大阻塞等待时间（负数表示没有限制）
        max-wait: 10000

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    hikari:
      connection-init-sql: set names utf8mb4    #支持emoji表情配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filter: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      #以下是监控相关配置
      #过滤器
      web-stat-filter:
        enabled: true
        #忽略资源
        exclusions: /*.a,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
        url-pattern: /*
        #配置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true
      #selvet 监控可视化界面
      stat-view-servlet:
        enabled: true
        login-password: root
        login-username: root
        url-pattern: /druid/*
        #白名单 空字符串表示都允许 但必须打开这个配置
        allow:
        #黑名单
        deny:


eureka:
  client:
    service-url:
      defaultZone: http://localhost:28080/eureka/
  instance:
    #优先使用IP地址注册
    prefer-ip-address:  true
    #hostname: ${spring.application.name}
    ##服务所属分组名称
    #app-group-name: xxx_group
    #服务实例id
    instanceId: ${spring.application.name}@${spring.cloud.client.ip-address}@${server.port}